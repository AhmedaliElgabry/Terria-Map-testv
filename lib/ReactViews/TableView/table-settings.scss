@import "~terriajs-variables";
@import "../../Sass/common/mixins";

.setting-panel {
}

.inline-setting-panel {
  display: inline-block;
}

.dropdown-inner {
  width: $setting-panel;
}

.viewer-selector,
.base-color-selector {
  composes: clearfix from "../../Sass/common/_base.scss";
  composes: list-reset from "../../Sass/common/_base.scss";

  margin: 0 -$padding-mini;
  display: flex;
}

.list-item {
  padding: $padding-mini;

  composes: col from "../../Sass/common/_base.scss";
  composes: col-4 from "../../Sass/common/_base.scss";
}

.btn--table-mode {
  composes: btn from "../../Sass/common/_buttons.scss";
  composes: btn-grey from "../../Sass/common/_buttons.scss";

  color: $text-light;

  &.is-active {
    border: 1px solid rgba(255, 255, 255, 0.5);
  }

  svg {
    height: 15px;
    width: 15px;
    display: inline;
    margin: 2px;
  }
}

.btn--base-color {
  padding: 0;
  position: relative;
  display: block;
  line-height: 1.2;
  border: 1px solid transparent;

  img {
    width: 100%;
    height: auto;
    display: block;
  }

  &:hover,
  &:focus {
    border: $border-style;
  }

  svg {
    position: absolute;
    right: 0;
    top: 0;
    fill: #ffffff;
    z-index: 1;
    width: 22px;
    border-radius: $radius-small;
    height: 22px;
  }

  &.is-active {
    border: 2px solid $turquoise-blue;
  }
}

.quality-label {
  display: inline-block;
}

.opacity-slider {
  margin-left: 10px;
}

.dropdown__list {
  display: flex;
  flex-direction: column;
  background: $dark-lighter;

  li a {
    // this makes sure the hover highlight fills the full width of the item
    display: block;
    padding-top: 0;
    padding-bottom: 0;
    width: 100%;

    @if variable-exists(text-link) {
      color: $text-light;
    }

    // Outside of a dropdown menu, links are normally shown with the same color on hover.
    // So, to provide some highlighting on hover in a dropdown menu, use the visited link color,
    // if it exists and is different from the unvisited link color.
    &:hover {
      @if variable-exists(text-visited-link) and
        variable-exists(text-link) and
        ($text-visited-link !=$text-link)
      {
        color: $text-visited-link;
        text-decoration: $link-text-decoration;
      }
    }
  }
}

.dropdown__button {
  composes: btn--small from "../../Sass/common/_buttons.scss";
  background-color: $dark-lighter;
  color: $text-light;

  &:hover,
  &:focus {
    background: $dark-lighter;
    color: $text-light;
  }
}

.btn__option {
  composes: btn from "../../Sass/common/_buttons.scss";
  composes: btn-transparent from "../../Sass/common/_buttons.scss";
  composes: btn--small from "../../Sass/common/_buttons.scss";

  width: 100%;
  color: $text-light !important;

  &:hover,
  &:focus {
    color: $dropdown-hover-color !important;
  }
}

.btn--color-mode {
  composes: btn from "../../Sass/common/_buttons.scss";
  composes: btn-grey from "../../Sass/common/_buttons.scss";

  width: 70px;
  height: 70px;
  margin: 2px;
  color: $text-light;

  &.is-active {
    border: 2px solid #346aa6;
  }

  svg {
    height: 30px;
    width: 30px;
    margin: 6px auto 0 auto;
  }
}

.lightMode {
  background: whitesmoke;
  color: black !important;

  svg {
    fill: black;
    display: block;
  }
}

.blueMode {
  background: whitesmoke;
  color: #346aa6;

  svg {
    fill: #346aa6;
    display: block;
  }
}

.darkMode {
  background: #5c636d;
  color: white;
  margin: 2px;

  svg {
    fill: white;
    display: block;
  }
}

.decimalPlacesParent {
  display: flex;
  justify-content: flex-start;
  gap: 10px;
  align-items: center;
  margin: 5px 0;
  padding: 5px 0;
}

.decimalPlaces {
  width: 110px;
  box-sizing: border-box;
  color: black;
  text-align: right;
  font-family: "Courier New", Courier, monospace;
}
